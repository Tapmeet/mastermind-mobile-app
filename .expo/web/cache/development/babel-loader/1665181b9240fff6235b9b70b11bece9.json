{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tsingh/Desktop/Tapmeet-Projects/mastermind-mobile-app/src/components/screens/AddAccountMethod.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { API_URL } from \"../Utility/AppConst\";\nimport { Container, Content, Form, Item, Input, Label, Button, Text, Body, H2, Icon } from \"native-base\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport { useSelector } from 'react-redux';\nimport { SideBarMenu } from \"../sidebar\";\nimport DatePicker from 'react-native-datepicker';\nimport moment from 'moment';\nvar apiUrl = API_URL.trim();\n\nvar AddAccountMethod = function AddAccountMethod(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loader = _React$useState2[0],\n      setloader = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Nickname = _React$useState4[0],\n      setNickname = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      AccountNumber = _React$useState6[0],\n      setAccountNumber = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      Routing = _React$useState8[0],\n      setRouting = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      CardExpiration = _React$useState10[0],\n      setCardExpiration = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      checkNickname = _React$useState12[0],\n      setCheckNickname = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      checkAccountNumber = _React$useState14[0],\n      setCheckAccountNumber = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      checkRouting = _React$useState16[0],\n      setCheckRouting = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      checkCardExpiration = _React$useState18[0],\n      setCheckCardExpiration = _React$useState18[1];\n\n  var _React$useState19 = React.useState(''),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      SuccessMessage = _React$useState20[0],\n      setSuccessMessage = _React$useState20[1];\n\n  var _React$useState21 = React.useState(''),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      errorMessage = _React$useState22[0],\n      setErrorMessage = _React$useState22[1];\n\n  var userId = useSelector(function (state) {\n    return state;\n  });\n\n  var _React$useState23 = React.useState(''),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      date = _React$useState24[0],\n      setDate = _React$useState24[1];\n\n  React.useEffect(function () {\n    navigation.addListener('focus', function () {\n      clearData();\n    });\n  });\n\n  var clearData = function clearData() {\n    setNickname('');\n    setAccountNumber('');\n    setRouting('');\n  };\n\n  var setnickname = function setnickname(event) {\n    setNickname(event);\n\n    if (event == \"\") {\n      setCheckNickname(true);\n    } else {\n      setCheckNickname(false);\n    }\n  };\n\n  var setaccountNumber = function setaccountNumber(event) {\n    setAccountNumber(event);\n\n    if (event == \"\") {\n      setCheckAccountNumber(true);\n    } else {\n      setCheckAccountNumber(false);\n    }\n  };\n\n  var setrouting = function setrouting(event) {\n    setRouting(event);\n\n    if (event == \"\") {\n      setCheckRouting(true);\n    } else {\n      setCheckRouting(false);\n    }\n  };\n\n  var addMethod = function addMethod() {\n    setErrorMessage('');\n    setSuccessMessage('');\n\n    if (Nickname == \"\") {\n      setCheckNickname(true);\n      return false;\n    }\n\n    if (AccountNumber == \"\") {\n      setCheckAccountNumber(true);\n      return false;\n    }\n\n    if (Routing == \"\") {\n      setCheckRouting(true);\n      return false;\n    }\n\n    fetch(apiUrl + \"/odata/PaymentMethod\", {\n      method: \"post\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + userId[0].access_Token\n      },\n      body: JSON.stringify({\n        \"PersonPaymentMethodId\": 0,\n        \"Nickname\": Nickname,\n        \"Account\": AccountNumber,\n        \"Routing\": Routing,\n        \"PaymentType\": \"2\"\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n\n      if (response[\"odata.error\"]) {\n        console.log(response[\"odata.error\"].message.value);\n        setErrorMessage(response[\"odata.error\"].message.value);\n      } else {\n        setSuccessMessage('Card Added Successfully');\n      }\n    });\n  };\n\n  var navigation = props.navigation;\n  return React.createElement(Container, {\n    style: loginStyle.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, React.createElement(SideBarMenu, {\n    title: \" Add Account  \",\n    navigation: props.navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), React.createElement(Content, {\n    style: loginStyle.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: loginStyle.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, loader ? React.createElement(View, {\n    style: [styles.container, styles.horizontal],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#29ABE2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  })) : React.createElement(View, {\n    style: {\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: checkNickname ? globalStyle.formFieldError : globalStyle.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: globalStyle.formLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"Nickname \"), React.createElement(Input, {\n    value: Nickname,\n    onChangeText: function onChangeText(text) {\n      return setnickname(text);\n    },\n    placeholderTextColor: \"#ccc\",\n    style: globalStyle.formControls,\n    placeholder: \"Nickname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  })), checkNickname ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, \"Enter Nickname \") : null), React.createElement(View, {\n    style: {\n      marginBottom: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: checkAccountNumber ? globalStyle.formFieldError : globalStyle.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: globalStyle.formLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"Account Number  \"), React.createElement(Input, {\n    value: AccountNumber,\n    keyboardType: \"number-pad\",\n    onChangeText: function onChangeText(text) {\n      return setaccountNumber(text);\n    },\n    placeholderTextColor: \"#ccc\",\n    style: globalStyle.formControls,\n    placeholder: \"Account Number \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  })), checkAccountNumber ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, \"Enter Account Number \") : null), React.createElement(View, {\n    style: {\n      marginBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: checkRouting ? globalStyle.formFieldError : globalStyle.formField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: globalStyle.formLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, \"Routing \"), React.createElement(Input, {\n    value: Routing,\n    onChangeText: function onChangeText(text) {\n      return setrouting(text);\n    },\n    placeholderTextColor: \"#ccc\",\n    style: globalStyle.formControls,\n    placeholder: \"Routing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  })), checkRouting ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"Enter Routing\") : null), checkCardExpiration ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"Enter Card Expiry\") : null, errorMessage != \"\" ? React.createElement(Text, {\n    style: globalStyle.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, errorMessage) : null, SuccessMessage != \"\" ? React.createElement(Text, {\n    style: globalStyle.sucessText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, SuccessMessage) : null, React.createElement(View, {\n    style: {\n      paddingLeft: 0,\n      paddingRight: 0,\n      marginTop: 20,\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, React.createElement(ImageBackground, {\n    style: [globalStyle.Btn, {\n      width: '100%'\n    }],\n    source: require(\"./../../../assets/Oval.png\"),\n    resizeMode: 'stretch',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: [loginStyle.buttons],\n    onPress: addMethod,\n    full: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: loginStyle.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, \"Submit\"))))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  }\n});\nexport default AddAccountMethod;","map":{"version":3,"sources":["/Users/tsingh/Desktop/Tapmeet-Projects/mastermind-mobile-app/src/components/screens/AddAccountMethod.js"],"names":["React","API_URL","Container","Content","Form","Item","Input","Label","Button","Text","Body","H2","Icon","loginStyle","globalStyle","useSelector","SideBarMenu","DatePicker","moment","apiUrl","trim","AddAccountMethod","props","useState","loader","setloader","Nickname","setNickname","AccountNumber","setAccountNumber","Routing","setRouting","CardExpiration","setCardExpiration","checkNickname","setCheckNickname","checkAccountNumber","setCheckAccountNumber","checkRouting","setCheckRouting","checkCardExpiration","setCheckCardExpiration","SuccessMessage","setSuccessMessage","errorMessage","setErrorMessage","userId","state","date","setDate","useEffect","navigation","addListener","clearData","setnickname","event","setaccountNumber","setrouting","addMethod","fetch","method","headers","Accept","access_Token","body","JSON","stringify","then","response","json","console","log","message","value","container","spacing","contentContainer","styles","horizontal","padding","marginBottom","formFieldError","formField","formLabel","text","formControls","error","errorText","sucessText","paddingLeft","paddingRight","marginTop","Btn","width","require","buttons","buttonText","StyleSheet","create","flex","justifyContent","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Image, StyleSheet, ImageBackground, useWindowDimensions, ActivityIndicator } from \"react-native\";\nimport { API_URL } from \"../Utility/AppConst\"\nimport {\n  Container,\n  Content,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Text,\n  Body,\n  H2,\n  Icon,\n} from \"native-base\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport { useSelector } from 'react-redux'\nimport { SideBarMenu } from \"../sidebar\";\nimport DatePicker from 'react-native-datepicker';\n\nimport moment from 'moment';\nconst apiUrl = API_URL.trim();\nconst AddAccountMethod = (props) => {\n  const [loader, setloader] = React.useState(false);\n  const [Nickname, setNickname] = React.useState('');\n  const [AccountNumber, setAccountNumber] = React.useState('');\n  const [Routing, setRouting] = React.useState('');\n  const [CardExpiration, setCardExpiration] = React.useState('');\n\n  const [checkNickname, setCheckNickname] = React.useState(false);\n  const [checkAccountNumber, setCheckAccountNumber] = React.useState(false);\n  const [checkRouting, setCheckRouting] = React.useState(false);\n  const [checkCardExpiration, setCheckCardExpiration] = React.useState(false);\n  const [SuccessMessage, setSuccessMessage] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const userId = useSelector(state => state);\n  const [date, setDate] = React.useState('');\n  React.useEffect(() => {\n    navigation.addListener('focus', () => {\n      clearData()\n    })\n  })\n  const clearData = () => { \n    setNickname('');\n    setAccountNumber('');\n    setRouting('');\n  }\n  const setnickname = (event) => {\n    setNickname(event);\n    if (event == \"\") {\n      setCheckNickname(true);\n    } else {\n      setCheckNickname(false);\n    }\n  };\n  const setaccountNumber = (event) => {\n    setAccountNumber(event);\n    if (event == \"\") {\n      setCheckAccountNumber(true);\n    } else {\n      setCheckAccountNumber(false);\n    }\n  };\n  const setrouting = (event) => {\n    setRouting(event);\n    if (event == \"\") {\n      setCheckRouting(true);\n    } else {\n      setCheckRouting(false);\n    }\n  };\n  const addMethod = () => {\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (Nickname == \"\") {\n      setCheckNickname(true);\n      return false;\n    }\n    if (AccountNumber == \"\") {\n      setCheckAccountNumber(true);\n      return false;\n    }\n    if (Routing == \"\") {\n      setCheckRouting(true);\n      return false;\n    }\n    // if (CardExpiration == \"\") {\n    //   setCheckCardExpiration(true);\n    //   return false;\n    // }\n    fetch(`${apiUrl}/odata/PaymentMethod`, {\n      method: \"post\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + userId[0].access_Token\n      },\n      body: JSON.stringify({\n        \"PersonPaymentMethodId\": 0,\n        \"Nickname\": Nickname,\n        \"Account\": AccountNumber,\n        \"Routing\": Routing,\n        \"PaymentType\": \"2\",\n\n      }),\n    })\n      .then(response => response.json())\n      .then(response => {\n        console.log(response);\n        if (response[\"odata.error\"]) {\n          console.log(response[\"odata.error\"].message.value);\n          setErrorMessage(response[\"odata.error\"].message.value);\n        } else {\n          setSuccessMessage('Card Added Successfully');\n        }\n      });\n  }\n  const { navigation } = props;\n  return (\n    <Container style={loginStyle.container}>\n      <SideBarMenu title={\" Add Account  \"} navigation={props.navigation} />\n      <Content style={loginStyle.spacing}>\n        <View style={loginStyle.contentContainer}>\n          {loader ?\n            <View style={[styles.container, styles.horizontal]}>\n              <ActivityIndicator size=\"large\" color=\"#29ABE2\" />\n            </View>\n            :\n            <View style={{ padding: 15 }}>\n              <View style={{ marginBottom: 15 }}>\n                <View style={checkNickname\n                  ? globalStyle.formFieldError : globalStyle.formField}>\n                  <Text style={globalStyle.formLabel}>Nickname </Text>\n                  <Input\n                    value={Nickname}\n                    onChangeText={(text) => setnickname(text)}\n                    placeholderTextColor='#ccc'\n                    style={globalStyle.formControls\n                    }\n                    placeholder=\"Nickname\"\n                  />\n                </View>\n                {checkNickname ? (\n                  <Text style={globalStyle.error}>Enter Nickname </Text>\n                ) : null}\n              </View>\n              <View style={{ marginBottom: 15 }}>\n                <View style={checkAccountNumber\n                  ? globalStyle.formFieldError : globalStyle.formField}>\n                  <Text style={globalStyle.formLabel}>Account Number  </Text>\n                  <Input\n                    value={AccountNumber}\n                    keyboardType=\"number-pad\"\n                    onChangeText={(text) => setaccountNumber(text)}\n                    placeholderTextColor='#ccc'\n                    style={globalStyle.formControls\n                    }\n                    placeholder=\"Account Number \"\n                  />\n                </View>\n                {checkAccountNumber ? (\n                  <Text style={globalStyle.error}>Enter Account Number </Text>\n                ) : null}\n              </View>\n              <View style={{ marginBottom: 25 }}>\n                <View style={checkRouting\n                  ? globalStyle.formFieldError : globalStyle.formField}>\n                  <Text style={globalStyle.formLabel}>Routing </Text>\n                  <Input\n                    value={Routing}\n                    onChangeText={(text) => setrouting(text)}\n                    placeholderTextColor='#ccc'\n                    style={\n                      globalStyle.formControls\n                    }\n                    placeholder=\"Routing\"\n                  />\n                </View>\n                {checkRouting ? (\n                  <Text style={globalStyle.error}>Enter Routing</Text>\n                ) : null}\n              </View>\n\n              {/* <View style={checkCardExpiration\n                ? globalStyle.formFieldError : globalStyle.formField}>\n                <Text style={globalStyle.formLabel}>Card Expiration </Text>\n                <View style={[globalStyle.formControls, { marginBottom: 15 }]}>\n                  <DatePicker\n                    showIcon={false}\n                    androidMode=\"spinner\"\n                    date={CardExpiration}\n                    mode=\"date\"\n                    placeholder=\"YYYY-MM-DD\"\n                    format=\"YYYY-MM-DD\"\n                    //maxDate={moment().format('YYYY-MM-DD')}\n                    confirmBtnText=\"Chọn\"\n                    cancelBtnText=\"Hủy\"\n                    style={{ fontSize: 20 }}\n                    customStyles={{\n                      dateInput: {\n                        backgroundColor: '#F7F8F9',\n                        borderWidth: 0,\n                        borderColor: 'black',\n                        width: \"100%\",\n                        padding: 0,\n                        fontSize: 20\n                      },\n                    }}\n                    onDateChange={(date) => { setCardExpiration(date) }}\n                  />\n                </View>\n              </View> */}\n              {checkCardExpiration ? (\n                <Text style={globalStyle.error}>Enter Card Expiry</Text>\n              ) : null}\n              {errorMessage != \"\" ? (\n                <Text style={globalStyle.errorText}>{errorMessage}</Text>\n              ) : null}\n              {SuccessMessage != \"\" ? (\n                <Text style={globalStyle.sucessText}>{SuccessMessage}</Text>\n              ) : null}\n              <View style={{ paddingLeft: 0, paddingRight: 0, marginTop: 20, marginBottom: 30 }}>\n                <ImageBackground\n                  style={[globalStyle.Btn, {\n                    width: '100%'\n                  }]}\n                  source={require('./../../../assets/Oval.png')}\n                  resizeMode={'stretch'}\n                >\n                  <Button\n                    style={[loginStyle.buttons]}\n                    onPress={addMethod}\n                    full>\n                    <Text style={loginStyle.buttonText} >Submit</Text>\n                  </Button>\n                </ImageBackground>\n              </View>\n\n            </View>\n          }\n\n        </View>\n      </Content>\n    </Container>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n});\nexport default AddAccountMethod;\n\n"]},"metadata":{},"sourceType":"module"}