{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Projects\\\\Mastermind-app\\\\Mastermind-App\\\\Mastermind\\\\src\\\\components\\\\screens\\\\ResetPassword.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Container, CheckBox, Content, Form, Item, Input, Label, Button, Text, Body, H3, Icon } from \"native-base\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\n\nvar ResetPassword = function ResetPassword(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      password = _React$useState2[0],\n      setPassword = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      confirmPassword = _React$useState4[0],\n      setConfirmPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      checkPassword = _React$useState6[0],\n      setCheckPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      checkConfirmPassword = _React$useState8[0],\n      setCheckConfirmPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      errorMessage = _React$useState10[0],\n      setErrorMessage = _React$useState10[1];\n\n  setpassword = function setpassword(event) {\n    setPassword(event);\n\n    if (event == \"\") {\n      setCheckPassword(true);\n    } else {\n      setCheckPassword(false);\n    }\n  };\n\n  setconfirmpassword = function setconfirmpassword(event) {\n    setConfirmPassword(event);\n\n    if (event == \"\") {\n      setCheckConfirmPassword(true);\n    } else {\n      setCheckConfirmPassword(false);\n    }\n  };\n\n  var submitForm = function submitForm() {\n    if (password == \"\") {\n      setCheckPassword(false);\n      return false;\n    }\n\n    if (confirmPassword == \"\") {\n      setCheckConfirmPassword(false);\n      return false;\n    }\n\n    if (password != confirmPassword) {\n      setCheckConfirmPassword(false);\n      return false;\n    }\n\n    fetch(\"http://192.168.1.100:45455\" + \"/odata/ResetPassword\", {\n      method: \"post\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email: props.route.params.email,\n        Password: password,\n        ConfirmPassword: confirmPassword,\n        Code: props.route.params.code,\n        VerificationKey: props.route.params.verificationKey\n      })\n    }).then(function (response) {\n      var jsonData = JSON.stringify(response);\n      var jsonDataPrase = JSON.parse(jsonData);\n\n      if (jsonDataPrase.status != 200) {\n        setErrorMessage(\"An error has occurred.\");\n      } else {\n        props.navigation.navigate(\"ResetSuccess\");\n      }\n    }).catch(function (response) {\n      setErrorMessage(\"An error has occurred.\");\n    });\n  };\n\n  var navigation = props.navigation;\n  return React.createElement(Container, {\n    style: loginStyle.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(Content, {\n    style: loginStyle.spacing,\n    padder: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: loginStyle.backWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"VerificationCode\");\n    },\n    style: loginStyle.backButtonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: loginStyle.backButton,\n    source: require(\"../../../assets/BackButton.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }))), React.createElement(Body, {\n    style: loginStyle.bodyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(H3, {\n    style: globalStyle.h3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Reset Password?\"), React.createElement(Text, {\n    style: verificationStyle.subHeadingWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Please Fill your detials below\")), React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: verificationStyle.envelop,\n    source: require(\"../../../assets/Lock.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, React.createElement(Item, {\n    style: globalStyle.formGroup,\n    floatingLabel: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setpassword(text);\n    },\n    style: checkPassword ? globalStyle.formControlError : globalStyle.formControl,\n    placeholder: \"New Password \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), checkPassword ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Enter Password\") : null), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, React.createElement(Item, {\n    style: globalStyle.formGroup,\n    floatingLabel: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    secureTextEntry: true,\n    value: confirmPassword,\n    onChangeText: function onChangeText(text) {\n      return setconfirmpassword(text);\n    },\n    style: checkConfirmPassword ? globalStyle.formControlError : globalStyle.formControl,\n    placeholder: \"Confirm  Password \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), checkConfirmPassword ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Check confirm password\") : null), React.createElement(Content, {\n    style: loginStyle.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, errorMessage != \"\" ? React.createElement(Text, {\n    style: globalStyle.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, errorMessage) : null, React.createElement(Button, {\n    onPress: submitForm,\n    style: loginStyle.button,\n    full: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Send\")), React.createElement(Body, {\n    style: verificationStyle.resendSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Didn't recieve code?\", \" \", React.createElement(Text, {\n    style: globalStyle.hyperlink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Resend\")))))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["E:/Projects/Mastermind-app/Mastermind-App/Mastermind/src/components/screens/ResetPassword.js"],"names":["React","Container","CheckBox","Content","Form","Item","Input","Label","Button","Text","Body","H3","Icon","verificationStyle","loginStyle","globalStyle","ResetPassword","props","useState","password","setPassword","confirmPassword","setConfirmPassword","checkPassword","setCheckPassword","checkConfirmPassword","setCheckConfirmPassword","errorMessage","setErrorMessage","setpassword","event","setconfirmpassword","submitForm","fetch","method","headers","Accept","body","JSON","stringify","Email","route","params","email","Password","ConfirmPassword","Code","code","VerificationKey","verificationKey","then","response","jsonData","jsonDataPrase","parse","status","navigation","navigate","catch","container","spacing","backWrapper","backButtonStyle","backButton","require","bodyContainer","h3","subHeadingWrapper","envelop","formGroup","text","formControlError","formControl","error","formContainer","errorText","button","resendSection","hyperlink"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SACEC,SADF,EAEEC,QAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,MARF,EASEC,IATF,EAUEC,IAVF,EAWEC,EAXF,EAYEC,IAZF,QAaO,aAbP;AAcA,OAAOC,iBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,wBACCjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CADD;AAAA;AAAA,MACxBC,QADwB;AAAA,MACdC,WADc;;AAAA,yBAEepB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAFf;AAAA;AAAA,MAExBG,eAFwB;AAAA,MAEPC,kBAFO;;AAAA,yBAGWtB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAHX;AAAA;AAAA,MAGxBK,aAHwB;AAAA,MAGTC,gBAHS;;AAAA,yBAIyBxB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAJzB;AAAA;AAAA,MAIxBO,oBAJwB;AAAA,MAIFC,uBAJE;;AAAA,yBAKS1B,KAAK,CAACkB,QAAN,CAAe,EAAf,CALT;AAAA;AAAA,MAKxBS,YALwB;AAAA,MAKVC,eALU;;AAO/BC,EAAAA,WAAW,GAAG,qBAACC,KAAD,EAAW;AACvBV,IAAAA,WAAW,CAACU,KAAD,CAAX;;AACA,QAAIA,KAAK,IAAI,EAAb,EAAiB;AACfN,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAPD;;AAQAO,EAAAA,kBAAkB,GAAG,4BAACD,KAAD,EAAW;AAC9BR,IAAAA,kBAAkB,CAACQ,KAAD,CAAlB;;AACA,QAAIA,KAAK,IAAI,EAAb,EAAiB;AACfJ,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,KAFD,MAEO;AACLA,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD;AACF,GAPD;;AASA,MAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIb,QAAQ,IAAI,EAAhB,EAAoB;AAClBK,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,aAAO,KAAP;AACD;;AACD,QAAIH,eAAe,IAAI,EAAvB,EAA2B;AACzBK,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACA,aAAO,KAAP;AACD;;AAED,QAAIP,QAAQ,IAAIE,eAAhB,EAAiC;AAC/BK,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACA,aAAO,KAAP;AACD;;AAEDO,IAAAA,KAAK,wDAAmC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,KADD;AAEP,wBAAgB;AAFT,OAF6B;AAMtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEvB,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CAAmBC,KADP;AAEnBC,QAAAA,QAAQ,EAAEzB,QAFS;AAGnB0B,QAAAA,eAAe,EAAExB,eAHE;AAInByB,QAAAA,IAAI,EAAE7B,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CAAmBK,IAJN;AAKnBC,QAAAA,eAAe,EAAE/B,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CAAmBO;AALjB,OAAf;AANgC,KAAnC,CAAL,CAcGC,IAdH,CAcQ,UAACC,QAAD,EAAc;AAClB,UAAIC,QAAQ,GAAGd,IAAI,CAACC,SAAL,CAAeY,QAAf,CAAf;AACA,UAAIE,aAAa,GAAGf,IAAI,CAACgB,KAAL,CAAWF,QAAX,CAApB;;AAEA,UAAIC,aAAa,CAACE,MAAd,IAAwB,GAA5B,EAAiC;AAC/B3B,QAAAA,eAAe,CAAC,wBAAD,CAAf;AACD,OAFD,MAEO;AACLX,QAAAA,KAAK,CAACuC,UAAN,CAAiBC,QAAjB,CAA0B,cAA1B;AACD;AACF,KAvBH,EAwBGC,KAxBH,CAwBS,UAACP,QAAD,EAAc;AACnBvB,MAAAA,eAAe,CAAC,wBAAD,CAAf;AACD,KA1BH;AA2BD,GA1CD;;AAxB+B,MAoEvB4B,UApEuB,GAoERvC,KApEQ,CAoEvBuC,UApEuB;AAqE/B,SACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE1C,UAAU,CAAC6C,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE7C,UAAU,CAAC8C,OAA3B;AAAoC,IAAA,MAAM,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,UAAU,CAAC+C,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAM5C,KAAK,CAACuC,UAAN,CAAiBC,QAAjB,CAA0B,kBAA1B,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAE3C,UAAU,CAACgD,eAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEhD,UAAU,CAACiD,UADpB;AAEE,IAAA,MAAM,EAAEC,OAAO,kCAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElD,UAAU,CAACmD,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAI,IAAA,KAAK,EAAElD,WAAW,CAACmD,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,iBAAiB,CAACsD,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,CAZF,EAkBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEtD,iBAAiB,CAACuD,OAD3B;AAEE,IAAA,MAAM,EAAEJ,OAAO,4BAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjD,WAAW,CAACsD,SAAzB;AAAoC,IAAA,aAAa,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAElD,QAFT;AAGE,IAAA,YAAY,EAAE,sBAACmD,IAAD;AAAA,aAAUzC,WAAW,CAACyC,IAAD,CAArB;AAAA,KAHhB;AAIE,IAAA,KAAK,EACH/C,aAAa,GACTR,WAAW,CAACwD,gBADH,GAETxD,WAAW,CAACyD,WAPpB;AASE,IAAA,WAAW,EAAC,eATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAcGjD,aAAa,GACZ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,WAAW,CAAC0D,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADY,GAEV,IAhBN,CAPF,EAyBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1D,WAAW,CAACsD,SAAzB;AAAoC,IAAA,aAAa,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAEhD,eAFT;AAGE,IAAA,YAAY,EAAE,sBAACiD,IAAD;AAAA,aAAUvC,kBAAkB,CAACuC,IAAD,CAA5B;AAAA,KAHhB;AAIE,IAAA,KAAK,EACH7C,oBAAoB,GAChBV,WAAW,CAACwD,gBADI,GAEhBxD,WAAW,CAACyD,WAPpB;AASE,IAAA,WAAW,EAAC,oBATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAcG/C,oBAAoB,GACnB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,WAAW,CAAC0D,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADmB,GAEjB,IAhBN,CAzBF,EA2CE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE3D,UAAU,CAAC4D,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/C,YAAY,IAAI,EAAhB,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,WAAW,CAAC4D,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhD,YADH,CADD,GAIG,IALN,EAME,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,UAAjB;AAA6B,IAAA,KAAK,EAAElB,UAAU,CAAC8D,MAA/C;AAAuD,IAAA,IAAI,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CANF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/D,iBAAiB,CAACgE,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuB,GADvB,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9D,WAAW,CAAC+D,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CATF,CA3CF,CAlBF,CADF,CADF;AAmFD,CAxJD;;AAyJA,eAAe9D,aAAf","sourcesContent":["import React from \"react\";\nimport { View, Image, StyleSheet } from \"react-native\";\nimport {\n  Container,\n  CheckBox,\n  Content,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Text,\n  Body,\n  H3,\n  Icon,\n} from \"native-base\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport {API_URL} from \"@env\"\nconst ResetPassword = (props) => {\n  const [password, setPassword] = React.useState(\"\");\n  const [confirmPassword, setConfirmPassword] = React.useState(\"\");\n  const [checkPassword, setCheckPassword] = React.useState(false);\n  const [checkConfirmPassword, setCheckConfirmPassword] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  setpassword = (event) => {\n    setPassword(event);\n    if (event == \"\") {\n      setCheckPassword(true);\n    } else {\n      setCheckPassword(false);\n    }\n  };\n  setconfirmpassword = (event) => {\n    setConfirmPassword(event);\n    if (event == \"\") {\n      setCheckConfirmPassword(true);\n    } else {\n      setCheckConfirmPassword(false);\n    }\n  };\n  //Form Submission\n  const submitForm = () => {\n    if (password == \"\") {\n      setCheckPassword(false);\n      return false;\n    }\n    if (confirmPassword == \"\") {\n      setCheckConfirmPassword(false);\n      return false;\n    }\n\n    if (password != confirmPassword) {\n      setCheckConfirmPassword(false);\n      return false;\n    }\n\n    fetch(`${API_URL}/odata/ResetPassword`, {\n      method: \"post\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        Email: props.route.params.email,\n        Password: password,\n        ConfirmPassword: confirmPassword,\n        Code: props.route.params.code,\n        VerificationKey: props.route.params.verificationKey,\n      }),\n    })\n      .then((response) => {\n        let jsonData = JSON.stringify(response);\n        let jsonDataPrase = JSON.parse(jsonData);\n        //console.log(jsonDataPrase.status)\n        if (jsonDataPrase.status != 200) {\n          setErrorMessage(\"An error has occurred.\");\n        } else {\n          props.navigation.navigate(\"ResetSuccess\");\n        }\n      })\n      .catch((response) => {\n        setErrorMessage(\"An error has occurred.\");\n      });\n  };\n\n  const { navigation } = props;\n  return (\n    <Container style={loginStyle.container}>\n      <Content style={loginStyle.spacing} padder>\n        <View style={loginStyle.backWrapper}>\n          <Text\n            onPress={() => props.navigation.navigate(\"VerificationCode\")}\n            style={loginStyle.backButtonStyle}\n          >\n            <Image\n              style={loginStyle.backButton}\n              source={require(\"../../../assets/BackButton.png\")}\n            />\n          </Text>\n        </View>\n        <Body style={loginStyle.bodyContainer}>\n          <H3 style={globalStyle.h3}>Reset Password?</H3>\n          <Text style={verificationStyle.subHeadingWrapper}>\n            Please Fill your detials below\n          </Text>\n        </Body>\n        <Form>\n          <Body>\n            <Image\n              style={verificationStyle.envelop}\n              source={require(\"../../../assets/Lock.png\")}\n            />\n          </Body>\n          <View>\n            <Item style={globalStyle.formGroup} floatingLabel>\n              <Input\n                secureTextEntry={true}\n                value={password}\n                onChangeText={(text) => setpassword(text)}\n                style={\n                  checkPassword\n                    ? globalStyle.formControlError\n                    : globalStyle.formControl\n                }\n                placeholder=\"New Password \"\n              />\n            </Item>\n            {checkPassword ? (\n              <Text style={globalStyle.error}>Enter Password</Text>\n            ) : null}\n          </View>\n          <View>\n            <Item style={globalStyle.formGroup} floatingLabel>\n              <Input\n                secureTextEntry={true}\n                value={confirmPassword}\n                onChangeText={(text) => setconfirmpassword(text)}\n                style={\n                  checkConfirmPassword\n                    ? globalStyle.formControlError\n                    : globalStyle.formControl\n                }\n                placeholder=\"Confirm  Password \"\n              />\n            </Item>\n            {checkConfirmPassword ? (\n              <Text style={globalStyle.error}>Check confirm password</Text>\n            ) : null}\n          </View>\n          <Content style={loginStyle.formContainer}>\n            {errorMessage != \"\" ? (\n              <Text style={globalStyle.errorText}>\n                {errorMessage}\n              </Text>\n            ) : null}\n            <Button onPress={submitForm} style={loginStyle.button} full>\n              <Text>Send</Text>\n            </Button>\n            <Body style={verificationStyle.resendSection}>\n              <Text>\n                Didn't recieve code?{\" \"}\n                <Text style={globalStyle.hyperlink}>Resend</Text>\n              </Text>\n            </Body>\n          </Content>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}