{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tsingh/Desktop/Tapmeet-Projects/mastermind-mobile-app/src/components/screens/Verification.js\";\n\nimport React, { useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport OtpInputs from \"./../Utility/Outinputs\";\nimport { Container, Content, Form, Item, Input, Label, Button, Text, Body, H3, Icon } from \"native-base\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport { useSelector } from 'react-redux';\nimport { API_URL } from \"./../Utility/AppConst\";\n\nvar VerificationCode = function VerificationCode(props) {\n  var userId = useSelector(function (state) {\n    return state;\n  });\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      otp = _React$useState2[0],\n      setOtp = _React$useState2[1];\n\n  var VerificationToken = 'MHK2JG';\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errorMessage = _React$useState4[0],\n      setErrorMessage = _React$useState4[1];\n\n  var _getOtp = function getOtp(otp) {\n    setOtp(otp);\n  };\n\n  var submitForm = function submitForm() {\n    if (otp.length < 6) {\n      setErrorMessage(\"Wrong verifcation code\");\n    } else {\n      var apiUrl = API_URL.trim();\n      fetch(apiUrl + \"/odata/StudentLink('\" + props.route.params.studentAccountGuid + \"')\", {\n        method: \"PUT\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + userId[0].access_Token\n        },\n        body: JSON.stringify({\n          Email: props.route.params.Email,\n          FirstName: props.route.params.FirstName,\n          LastName: props.route.params.LastName,\n          StudentId: props.route.params.studentId,\n          VerificationToken: otp\n        })\n      }).then(function (response) {\n        var jsonData = JSON.stringify(response);\n        console.log(jsonData);\n        var jsonDataPrase = JSON.parse(jsonData);\n        console.log(jsonDataPrase.status);\n\n        if (jsonDataPrase.status >= 200 && jsonDataPrase.status < 300) {\n          props.navigation.navigate(\"StudentLinkSuccess\");\n        } else {\n          setErrorMessage(\"An error has occurred.\");\n        }\n      }).catch(function (response) {\n        setErrorMessage(\"An error has occurred.\");\n      });\n    }\n  };\n\n  var navigation = props.navigation;\n  var route = props.route;\n  return React.createElement(Container, {\n    style: loginStyle.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Content, {\n    style: loginStyle.spacing,\n    padder: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: loginStyle.backWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Link Student\");\n    },\n    style: loginStyle.backButtonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: loginStyle.backButton,\n    source: require(\"../../../assets/BackButton.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))), React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: verificationStyle.envelop,\n    source: require(\"../../../assets/success.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), React.createElement(Body, {\n    style: [loginStyle.bodyContainer, {\n      marginTop: -40\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(H3, {\n    style: globalStyle.h3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Enter Verification Code\"), React.createElement(Text, {\n    style: [verificationStyle.subHeading, {\n      fontSize: 22\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Please enter\"), React.createElement(Text, {\n    style: [verificationStyle.subHeading, {\n      lineHeight: 10,\n      fontSize: 22\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"your verification code\")), React.createElement(Body, {\n    style: verificationStyle.spaceBetween,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(OtpInputs, {\n    getOtp: function getOtp(otp) {\n      return _getOtp(otp);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), React.createElement(Content, {\n    style: [loginStyle.formContainer, {\n      paddingRight: 15,\n      paddingLeft: 15\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(ImageBackground, {\n    style: [globalStyle.Btn, {\n      width: '100%'\n    }],\n    source: require(\"./../../../assets/Oval.png\"),\n    resizeMode: 'stretch',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    onPress: submitForm,\n    style: loginStyle.buttons,\n    full: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: loginStyle.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Submit\"))), errorMessage != \"\" ? React.createElement(Text, {\n    style: globalStyle.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, errorMessage) : null, React.createElement(Body, {\n    style: [verificationStyle.resendSection, {\n      marginTop: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Didn't recieve code?\", \" \", React.createElement(Text, {\n    style: globalStyle.hyperlink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Resend\")))))));\n};\n\nexport default VerificationCode;","map":{"version":3,"sources":["/Users/tsingh/Desktop/Tapmeet-Projects/mastermind-mobile-app/src/components/screens/Verification.js"],"names":["React","useRef","OtpInputs","Container","Content","Form","Item","Input","Label","Button","Text","Body","H3","Icon","verificationStyle","loginStyle","globalStyle","useSelector","API_URL","VerificationCode","props","userId","state","useState","otp","setOtp","VerificationToken","errorMessage","setErrorMessage","getOtp","submitForm","length","apiUrl","trim","fetch","route","params","studentAccountGuid","method","headers","Accept","access_Token","body","JSON","stringify","Email","FirstName","LastName","StudentId","studentId","then","response","jsonData","console","log","jsonDataPrase","parse","status","navigation","navigate","catch","container","spacing","backWrapper","backButtonStyle","backButton","require","envelop","bodyContainer","marginTop","h3","subHeading","fontSize","lineHeight","spaceBetween","formContainer","paddingRight","paddingLeft","Btn","width","buttons","buttonText","errorText","resendSection","hyperlink"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { View, Image, StyleSheet, ImageBackground } from \"react-native\";\nimport OtpInputs from \"./../Utility/Outinputs\";\nimport {\n  Container,\n  //CheckBox,\n  Content,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Text,\n  Body,\n  H3,\n  Icon,\n} from \"native-base\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport { useSelector } from 'react-redux'\nimport { API_URL } from \"./../Utility/AppConst\"\nconst VerificationCode = (props) => {\n  const userId = useSelector(state => state);\n  const [otp, setOtp] = React.useState(\"\");\n  const VerificationToken = 'MHK2JG';\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const getOtp = (otp) => {\n    setOtp(otp);\n  };\n  const submitForm = () => {\n    //props.navigation.navigate(\"StudentLinkSuccess\");\n    // console.log(otp)\n    // console.log(\"Verifcation \" + VerificationToken)\n    if (otp.length < 6) {\n      setErrorMessage(\"Wrong verifcation code\");\n    } else {\n      const apiUrl = API_URL.trim();\n      fetch(`${apiUrl}/odata/StudentLink('${props.route.params.studentAccountGuid}')`, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Bearer ' + userId[0].access_Token\n        },\n        body: JSON.stringify({\n          Email: props.route.params.Email,\n          FirstName: props.route.params.FirstName,\n          LastName: props.route.params.LastName,\n          StudentId: props.route.params.studentId,\n          VerificationToken: otp,\n        }),\n      })\n        .then((response) => {\n          let jsonData = JSON.stringify(response);\n          console.log(jsonData)\n          let jsonDataPrase = JSON.parse(jsonData);\n          console.log(jsonDataPrase.status)\n          if (jsonDataPrase.status >= 200 && jsonDataPrase.status < 300) {\n            props.navigation.navigate(\"StudentLinkSuccess\");\n          } else {\n            setErrorMessage(\"An error has occurred.\");\n          }\n        })\n        .catch((response) => {\n          setErrorMessage(\"An error has occurred.\");\n        });\n    }\n  };\n\n  const { navigation } = props;\n  const { route } = props;\n  return (\n    <Container style={loginStyle.container}>\n      <Content style={loginStyle.spacing} padder>\n        <View style={loginStyle.backWrapper}>\n          <Text\n            onPress={() => props.navigation.navigate(\"Link Student\")}\n            style={loginStyle.backButtonStyle}\n          >\n            <Image\n              style={loginStyle.backButton}\n              source={require(\"../../../assets/BackButton.png\")}\n            />\n          </Text>\n        </View>\n\n        <Form>\n          <Body>\n            <Image\n              style={verificationStyle.envelop}\n              source={require(\"../../../assets/success.png\")}\n            />\n          </Body>\n          <Body style={[loginStyle.bodyContainer, { marginTop: -40 }]}>\n            <H3 style={globalStyle.h3}>Enter Verification Code</H3>\n            <Text style={[verificationStyle.subHeading, { fontSize: 22, }]}>\n              Please enter\n          </Text>\n            <Text style={[verificationStyle.subHeading, { lineHeight: 10, fontSize: 22 }]}>\n              your verification code\n          </Text>\n          </Body>\n          <Body style={verificationStyle.spaceBetween}>\n            <OtpInputs getOtp={(otp) => getOtp(otp)} />\n          </Body>\n\n          <Content style={[loginStyle.formContainer, { paddingRight: 15, paddingLeft: 15 }]}>\n            <ImageBackground\n              style={[globalStyle.Btn, {\n                width: '100%'\n              }]}\n              source={require('./../../../assets/Oval.png')}\n              resizeMode={'stretch'}\n\n            >\n              <Button onPress={submitForm} style={loginStyle.buttons} full>\n                <Text style={loginStyle.buttonText} >Submit</Text>\n              </Button>\n            </ImageBackground>\n            {/* <Button onPress={submitForm} style={loginStyle.button} full>\n              <Text>Send</Text>\n            </Button> */}\n            {errorMessage != \"\" ? (\n              <Text style={globalStyle.errorText}>{errorMessage}</Text>\n            ) : null}\n\n            <Body style={[verificationStyle.resendSection, { marginTop: 20 }]}>\n              <Text style={{ fontSize: 18 }}>\n                Didn't recieve code?{\" \"}\n                <Text style={globalStyle.hyperlink}>Resend</Text>\n              </Text>\n            </Body>\n          </Content>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\nexport default VerificationCode;\n"]},"metadata":{},"sourceType":"module"}