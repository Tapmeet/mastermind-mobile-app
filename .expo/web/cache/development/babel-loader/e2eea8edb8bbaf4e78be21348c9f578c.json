{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tsingh/Desktop/Projects/mastermind-mobile-app/src/components/Utility/Outinputs.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Content, Item, Input } from \"native-base\";\nimport { Grid, Col } from \"react-native-easy-grid\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\n\nvar OtpInputs = function (_React$Component) {\n  _inherits(OtpInputs, _React$Component);\n\n  var _super = _createSuper(OtpInputs);\n\n  function OtpInputs() {\n    var _this;\n\n    _classCallCheck(this, OtpInputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      otp: []\n    };\n    _this.otpTextInput = [];\n    return _this;\n  }\n\n  _createClass(OtpInputs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.otpTextInput[0]._root.focus();\n    }\n  }, {\n    key: \"renderInputs\",\n    value: function renderInputs() {\n      var _this2 = this;\n\n      var inputs = Array(6).fill(0);\n      var txt = inputs.map(function (i, j) {\n        return React.createElement(Col, {\n          key: j,\n          style: styles.txtMargin,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 7\n          }\n        }, React.createElement(Item, {\n          style: styles.gridPad,\n          regular: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 9\n          }\n        }, React.createElement(Input, {\n          style: verificationStyle.formControl,\n          onChangeText: function onChangeText(v) {\n            return _this2.focusNext(j, v);\n          },\n          onKeyPress: function onKeyPress(e) {\n            return _this2.focusPrevious(e.nativeEvent.key, j);\n          },\n          ref: function ref(_ref) {\n            return _this2.otpTextInput[j] = _ref;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }\n        })));\n      });\n      return txt;\n    }\n  }, {\n    key: \"focusPrevious\",\n    value: function focusPrevious(key, index) {\n      if (key === \"Backspace\" && index !== 0) this.otpTextInput[index - 1]._root.focus();\n    }\n  }, {\n    key: \"focusNext\",\n    value: function focusNext(index, value) {\n      if (index < this.otpTextInput.length - 1 && value) {\n        this.otpTextInput[index + 1]._root.focus();\n      }\n\n      if (index === this.otpTextInput.length - 1) {\n        this.otpTextInput[index]._root.blur();\n      }\n\n      var otp = this.state.otp;\n      otp[index] = value;\n      this.setState({\n        otp: otp\n      });\n      this.props.getOtp(otp.join(\"\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          position: \"relative\",\n          zIndex: 9999\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, React.createElement(Grid, {\n        style: styles.gridPad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, this.renderInputs()));\n    }\n  }]);\n\n  return OtpInputs;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  gridPad: {\n    padding: 0,\n    borderColor: \"#fff\"\n  },\n  txtMargin: {\n    margin: 0,\n    borderColor: \"#fff\"\n  },\n  inputRadius: {\n    textAlign: \"center\",\n    borderColor: \"#fff\"\n  }\n});\nexport default OtpInputs;","map":{"version":3,"sources":["/Users/tsingh/Desktop/Projects/mastermind-mobile-app/src/components/Utility/Outinputs.js"],"names":["React","Content","Item","Input","Grid","Col","verificationStyle","OtpInputs","state","otp","otpTextInput","_root","focus","inputs","Array","fill","txt","map","i","j","styles","txtMargin","gridPad","formControl","v","focusNext","e","focusPrevious","nativeEvent","key","ref","index","value","length","blur","setState","props","getOtp","join","display","width","position","zIndex","renderInputs","Component","StyleSheet","create","padding","borderColor","margin","inputRadius","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAqC,aAArC;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,wBAA1B;AACA,OAAOC,iBAAP;;IAEMC,S;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAE;AAAP,K;UACRC,Y,GAAe,E;;;;;;WAEf,6BAAoB;AAClB,WAAKA,YAAL,CAAkB,CAAlB,EAAqBC,KAArB,CAA2BC,KAA3B;AACD;;;WAED,wBAAe;AAAA;;AACb,UAAMC,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAAf;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,GAAP,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACrB,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAa,UAAA,KAAK,EAAEC,MAAM,CAACC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAA6B,UAAA,OAAO,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAEhB,iBAAiB,CAACiB,WAD3B;AAEE,UAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,mBAAO,MAAI,CAACC,SAAL,CAAeN,CAAf,EAAkBK,CAAlB,CAAP;AAAA,WAFhB;AAGE,UAAA,UAAU,EAAE,oBAACE,CAAD;AAAA,mBAAO,MAAI,CAACC,aAAL,CAAmBD,CAAC,CAACE,WAAF,CAAcC,GAAjC,EAAsCV,CAAtC,CAAP;AAAA,WAHd;AAIE,UAAA,GAAG,EAAE,aAACW,IAAD;AAAA,mBAAU,MAAI,CAACpB,YAAL,CAAkBS,CAAlB,IAAuBW,IAAjC;AAAA,WAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADqB;AAAA,OAAX,CAAZ;AAYA,aAAOd,GAAP;AACD;;;WAED,uBAAca,GAAd,EAAmBE,KAAnB,EAA0B;AACxB,UAAIF,GAAG,KAAK,WAAR,IAAuBE,KAAK,KAAK,CAArC,EACE,KAAKrB,YAAL,CAAkBqB,KAAK,GAAG,CAA1B,EAA6BpB,KAA7B,CAAmCC,KAAnC;AACH;;;WAED,mBAAUmB,KAAV,EAAiBC,KAAjB,EAAwB;AACtB,UAAID,KAAK,GAAG,KAAKrB,YAAL,CAAkBuB,MAAlB,GAA2B,CAAnC,IAAwCD,KAA5C,EAAmD;AACjD,aAAKtB,YAAL,CAAkBqB,KAAK,GAAG,CAA1B,EAA6BpB,KAA7B,CAAmCC,KAAnC;AACD;;AACD,UAAImB,KAAK,KAAK,KAAKrB,YAAL,CAAkBuB,MAAlB,GAA2B,CAAzC,EAA4C;AAC1C,aAAKvB,YAAL,CAAkBqB,KAAlB,EAAyBpB,KAAzB,CAA+BuB,IAA/B;AACD;;AACD,UAAMzB,GAAG,GAAG,KAAKD,KAAL,CAAWC,GAAvB;AACAA,MAAAA,GAAG,CAACsB,KAAD,CAAH,GAAaC,KAAb;AACA,WAAKG,QAAL,CAAc;AAAE1B,QAAAA,GAAG,EAAHA;AAAF,OAAd;AACA,WAAK2B,KAAL,CAAWC,MAAX,CAAkB5B,GAAG,CAAC6B,IAAJ,CAAS,EAAT,CAAlB;AACD;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,KAAK,EAAE,MAA1B;AAAkCC,UAAAA,QAAQ,EAAC,UAA3C;AAAuDC,UAAAA,MAAM,EAAE;AAA/D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKqB,YAAL,EAA9B,CADF,CADF;AAKD;;;;EAjDqB3C,KAAK,CAAC4C,S;;AAoD9B,IAAMxB,MAAM,GAAGyB,UAAU,CAACC,MAAX,CAAkB;AAC/BxB,EAAAA,OAAO,EAAE;AAAEyB,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GADsB;AAE/B3B,EAAAA,SAAS,EAAE;AAAE4B,IAAAA,MAAM,EAAE,CAAV;AAAaD,IAAAA,WAAW,EAAE;AAA1B,GAFoB;AAG/BE,EAAAA,WAAW,EAAE;AAAEC,IAAAA,SAAS,EAAE,QAAb;AAAuBH,IAAAA,WAAW,EAAE;AAApC;AAHkB,CAAlB,CAAf;AAMA,eAAezC,SAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Content, Item, Input } from \"native-base\";\nimport { Grid, Col } from \"react-native-easy-grid\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\n\nclass OtpInputs extends React.Component {\n  state = { otp: [] };\n  otpTextInput = [];\n\n  componentDidMount() {\n    this.otpTextInput[0]._root.focus();\n  }\n\n  renderInputs() {\n    const inputs = Array(6).fill(0);\n    const txt = inputs.map((i, j) => (\n      <Col key={j} style={styles.txtMargin}>\n        <Item style={styles.gridPad} regular>\n          <Input\n            style={verificationStyle.formControl}\n            onChangeText={(v) => this.focusNext(j, v)}\n            onKeyPress={(e) => this.focusPrevious(e.nativeEvent.key, j)}\n            ref={(ref) => (this.otpTextInput[j] = ref)}\n          />\n        </Item>\n      </Col>\n    ));\n    return txt;\n  }\n\n  focusPrevious(key, index) {\n    if (key === \"Backspace\" && index !== 0)\n      this.otpTextInput[index - 1]._root.focus();\n  }\n\n  focusNext(index, value) {\n    if (index < this.otpTextInput.length - 1 && value) {\n      this.otpTextInput[index + 1]._root.focus();\n    }\n    if (index === this.otpTextInput.length - 1) {\n      this.otpTextInput[index]._root.blur();\n    }\n    const otp = this.state.otp;\n    otp[index] = value;\n    this.setState({ otp });\n    this.props.getOtp(otp.join(\"\"));\n  }\n\n  render() {\n    return (\n      <View style={{ display: \"flex\", width: \"100%\", position:\"relative\", zIndex: 9999 }}>\n        <Grid style={styles.gridPad}>{this.renderInputs()}</Grid>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  gridPad: { padding: 0, borderColor: \"#fff\" },\n  txtMargin: { margin: 0, borderColor: \"#fff\" },\n  inputRadius: { textAlign: \"center\", borderColor: \"#fff\" },\n});\n\nexport default OtpInputs;\n"]},"metadata":{},"sourceType":"module"}