{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tsingh/Desktop/Projects/mastermind-mobile-app/node_modules/react-native-signature-capture-view/src/SignatureView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { WebView } from 'react-native-webview';\n\nvar listenerType = function listenerType() {\n  switch (Platform.OS) {\n    case 'android':\n      return 'document';\n\n    case 'ios':\n      return 'window';\n  }\n};\n\nvar sourceHtml = \"\\n\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n</head>\\n<script>\\n    ! function(t, e) {\\n        \\\"object\\\" == typeof exports && \\\"undefined\\\" != typeof module ? module.exports = e() : \\\"function\\\" == typeof define && define.amd ? define(e) : t.SignaturePad = e()\\n    }(this, function() {\\n        \\\"use strict\\\";\\n\\n        function t(t, e, i) {\\n            this.x = t, this.y = e, this.time = i || (new Date).getTime()\\n        }\\n\\n        function e(t, e, i, o) {\\n            this.startPoint = t, this.control1 = e, this.control2 = i, this.endPoint = o\\n        }\\n\\n        function i(t, e, i) {\\n            var o, n, s, r = null,\\n                h = 0;\\n            i || (i = {});\\n            var a = function() {\\n                h = !1 === i.leading ? 0 : Date.now(), r = null, s = t.apply(o, n), r || (o = n = null)\\n            };\\n            return function() {\\n                var c = Date.now();\\n                h || !1 !== i.leading || (h = c);\\n                var d = e - (c - h);\\n                return o = this, n = arguments, d <= 0 || d > e ? (r && (clearTimeout(r), r = null), h = c, s = t.apply(o, n), r || (o = n = null)) : r || !1 === i.trailing || (r = setTimeout(a, d)), s\\n            }\\n        }\\n\\n        function o(t, e) {\\n            var n = this,\\n                s = e || {};\\n            this.velocityFilterWeight = s.velocityFilterWeight || .7, this.minWidth = s.minWidth || .5, this.maxWidth = s.maxWidth || 2.5, this.throttle = \\\"throttle\\\" in s ? s.throttle : 16, this.minDistance = \\\"minDistance\\\" in s ? s.minDistance : 5, this.throttle ? this._strokeMoveUpdate = i(o.prototype._strokeUpdate, this.throttle) : this._strokeMoveUpdate = o.prototype._strokeUpdate, this.dotSize = s.dotSize || function() {\\n                return (this.minWidth + this.maxWidth) / 2\\n            }, this.penColor = s.penColor || \\\"black\\\", this.backgroundColor = s.backgroundColor || \\\"rgba(0,0,0,0)\\\", this.onBegin = s.onBegin, this.onEnd = s.onEnd, this._canvas = t, this._ctx = t.getContext(\\\"2d\\\"), this.clear(), this._handleMouseDown = function(t) {\\n                1 === t.which && (n._mouseButtonDown = !0, n._strokeBegin(t))\\n            }, this._handleMouseMove = function(t) {\\n                n._mouseButtonDown && n._strokeMoveUpdate(t)\\n            }, this._handleMouseUp = function(t) {\\n                1 === t.which && n._mouseButtonDown && (n._mouseButtonDown = !1, n._strokeEnd(t))\\n            }, this._handleTouchStart = function(t) {\\n                if (1 === t.targetTouches.length) {\\n                    var e = t.changedTouches[0];\\n                    n._strokeBegin(e)\\n                }\\n            }, this._handleTouchMove = function(t) {\\n                t.preventDefault();\\n                var e = t.targetTouches[0];\\n                n._strokeMoveUpdate(e)\\n            }, this._handleTouchEnd = function(t) {\\n                t.target === n._canvas && (t.preventDefault(), n._strokeEnd(t))\\n            }, this.on()\\n        }\\n        return t.prototype.velocityFrom = function(t) {\\n            return this.time !== t.time ? this.distanceTo(t) / (this.time - t.time) : 1\\n        }, t.prototype.distanceTo = function(t) {\\n            return Math.sqrt(Math.pow(this.x - t.x, 2) + Math.pow(this.y - t.y, 2))\\n        }, t.prototype.equals = function(t) {\\n            return this.x === t.x && this.y === t.y && this.time === t.time\\n        }, e.prototype.length = function() {\\n            for (var t = 0, e = void 0, i = void 0, o = 0; o <= 10; o += 1) {\\n                var n = o / 10,\\n                    s = this._point(n, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x),\\n                    r = this._point(n, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\\n                if (o > 0) {\\n                    var h = s - e,\\n                        a = r - i;\\n                    t += Math.sqrt(h * h + a * a)\\n                }\\n                e = s, i = r\\n            }\\n            return t\\n        }, e.prototype._point = function(t, e, i, o, n) {\\n            return e * (1 - t) * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) * t + 3 * o * (1 - t) * t * t + n * t * t * t\\n        }, o.prototype.clear = function() {\\n            var t = this._ctx,\\n                e = this._canvas;\\n            t.fillStyle = this.backgroundColor, t.clearRect(0, 0, e.width, e.height), t.fillRect(0, 0, e.width, e.height), this._data = [], this._reset(), this._isEmpty = !0\\n        }, o.prototype.fromDataURL = function(t) {\\n            var e = this,\\n                i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\\n                o = new Image,\\n                n = i.ratio || window.devicePixelRatio || 1,\\n                s = i.width || this._canvas.width / n,\\n                r = i.height || this._canvas.height / n;\\n            this._reset(), o.src = t, o.onload = function() {\\n                e._ctx.drawImage(o, 0, 0, s, r)\\n            }, this._isEmpty = !1\\n        }, o.prototype.toDataURL = function(t) {\\n            var e;\\n            switch (t) {\\n                case \\\"image/svg+xml\\\":\\n                    return this._toSVG();\\n                default:\\n                    for (var i = arguments.length, o = Array(i > 1 ? i - 1 : 0), n = 1; n < i; n++) o[n - 1] = arguments[n];\\n                    return (e = this._canvas).toDataURL.apply(e, [t].concat(o))\\n            }\\n        }, o.prototype.on = function() {\\n            this._handleMouseEvents(), this._handleTouchEvents()\\n        }, o.prototype.off = function() {\\n            this._canvas.removeEventListener(\\\"mousedown\\\", this._handleMouseDown), this._canvas.removeEventListener(\\\"mousemove\\\", this._handleMouseMove), document.removeEventListener(\\\"mouseup\\\", this._handleMouseUp), this._canvas.removeEventListener(\\\"touchstart\\\", this._handleTouchStart), this._canvas.removeEventListener(\\\"touchmove\\\", this._handleTouchMove), this._canvas.removeEventListener(\\\"touchend\\\", this._handleTouchEnd)\\n        }, o.prototype.isEmpty = function() {\\n            return this._isEmpty\\n        }, o.prototype._strokeBegin = function(t) {\\n            this._data.push([]), this._reset(), this._strokeUpdate(t), \\\"function\\\" == typeof this.onBegin && this.onBegin(t)\\n        }, o.prototype._strokeUpdate = function(t) {\\n            var e = t.clientX,\\n                i = t.clientY,\\n                o = this._createPoint(e, i),\\n                n = this._data[this._data.length - 1],\\n                s = n && n[n.length - 1],\\n                r = s && o.distanceTo(s) < this.minDistance;\\n            if (!s || !r) {\\n                var h = this._addPoint(o),\\n                    a = h.curve,\\n                    c = h.widths;\\n                a && c && this._drawCurve(a, c.start, c.end), this._data[this._data.length - 1].push({\\n                    x: o.x,\\n                    y: o.y,\\n                    time: o.time,\\n                    color: this.penColor\\n                })\\n            }\\n        }, o.prototype._strokeEnd = function(t) {\\n            var e = this.points.length > 2,\\n                i = this.points[0];\\n            if (!e && i && this._drawDot(i), i) {\\n                var o = this._data[this._data.length - 1],\\n                    n = o[o.length - 1];\\n                i.equals(n) || o.push({\\n                    x: i.x,\\n                    y: i.y,\\n                    time: i.time,\\n                    color: this.penColor\\n                })\\n            }\\n            \\\"function\\\" == typeof this.onEnd && this.onEnd(t)\\n        }, o.prototype._handleMouseEvents = function() {\\n            this._mouseButtonDown = !1, this._canvas.addEventListener(\\\"mousedown\\\", this._handleMouseDown), this._canvas.addEventListener(\\\"mousemove\\\", this._handleMouseMove), document.addEventListener(\\\"mouseup\\\", this._handleMouseUp)\\n        }, o.prototype._handleTouchEvents = function() {\\n            this._canvas.style.msTouchAction = \\\"none\\\", this._canvas.style.touchAction = \\\"none\\\", this._canvas.addEventListener(\\\"touchstart\\\", this._handleTouchStart), this._canvas.addEventListener(\\\"touchmove\\\", this._handleTouchMove), this._canvas.addEventListener(\\\"touchend\\\", this._handleTouchEnd)\\n        }, o.prototype._reset = function() {\\n            this.points = [], this._lastVelocity = 0, this._lastWidth = (this.minWidth + this.maxWidth) / 2, this._ctx.fillStyle = this.penColor\\n        }, o.prototype._createPoint = function(e, i, o) {\\n            var n = this._canvas.getBoundingClientRect();\\n            return new t(e - n.left, i - n.top, o || (new Date).getTime())\\n        }, o.prototype._addPoint = function(t) {\\n            var i = this.points,\\n                o = void 0;\\n            if (i.push(t), i.length > 2) {\\n                3 === i.length && i.unshift(i[0]), o = this._calculateCurveControlPoints(i[0], i[1], i[2]);\\n                var n = o.c2;\\n                o = this._calculateCurveControlPoints(i[1], i[2], i[3]);\\n                var s = o.c1,\\n                    r = new e(i[1], n, s, i[2]),\\n                    h = this._calculateCurveWidths(r);\\n                return i.shift(), {\\n                    curve: r,\\n                    widths: h\\n                }\\n            }\\n            return {}\\n        }, o.prototype._calculateCurveControlPoints = function(e, i, o) {\\n            var n = e.x - i.x,\\n                s = e.y - i.y,\\n                r = i.x - o.x,\\n                h = i.y - o.y,\\n                a = {\\n                    x: (e.x + i.x) / 2,\\n                    y: (e.y + i.y) / 2\\n                },\\n                c = {\\n                    x: (i.x + o.x) / 2,\\n                    y: (i.y + o.y) / 2\\n                },\\n                d = Math.sqrt(n * n + s * s),\\n                l = Math.sqrt(r * r + h * h),\\n                u = a.x - c.x,\\n                v = a.y - c.y,\\n                p = l / (d + l),\\n                _ = {\\n                    x: c.x + u * p,\\n                    y: c.y + v * p\\n                },\\n                y = i.x - _.x,\\n                f = i.y - _.y;\\n            return {\\n                c1: new t(a.x + y, a.y + f),\\n                c2: new t(c.x + y, c.y + f)\\n            }\\n        }, o.prototype._calculateCurveWidths = function(t) {\\n            var e = t.startPoint,\\n                i = t.endPoint,\\n                o = {\\n                    start: null,\\n                    end: null\\n                },\\n                n = this.velocityFilterWeight * i.velocityFrom(e) + (1 - this.velocityFilterWeight) * this._lastVelocity,\\n                s = this._strokeWidth(n);\\n            return o.start = this._lastWidth, o.end = s, this._lastVelocity = n, this._lastWidth = s, o\\n        }, o.prototype._strokeWidth = function(t) {\\n            return Math.max(this.maxWidth / (t + 1), this.minWidth)\\n        }, o.prototype._drawPoint = function(t, e, i) {\\n            var o = this._ctx;\\n            o.moveTo(t, e), o.arc(t, e, i, 0, 2 * Math.PI, !1), this._isEmpty = !1\\n        }, o.prototype._drawCurve = function(t, e, i) {\\n            var o = this._ctx,\\n                n = i - e,\\n                s = Math.floor(t.length());\\n            o.beginPath();\\n            for (var r = 0; r < s; r += 1) {\\n                var h = r / s,\\n                    a = h * h,\\n                    c = a * h,\\n                    d = 1 - h,\\n                    l = d * d,\\n                    u = l * d,\\n                    v = u * t.startPoint.x;\\n                v += 3 * l * h * t.control1.x, v += 3 * d * a * t.control2.x, v += c * t.endPoint.x;\\n                var p = u * t.startPoint.y;\\n                p += 3 * l * h * t.control1.y, p += 3 * d * a * t.control2.y, p += c * t.endPoint.y;\\n                var _ = e + c * n;\\n                this._drawPoint(v, p, _)\\n            }\\n            o.closePath(), o.fill()\\n        }, o.prototype._drawDot = function(t) {\\n            var e = this._ctx,\\n                i = \\\"function\\\" == typeof this.dotSize ? this.dotSize() : this.dotSize;\\n            e.beginPath(), this._drawPoint(t.x, t.y, i), e.closePath(), e.fill()\\n        }, o.prototype._fromData = function(e, i, o) {\\n            for (var n = 0; n < e.length; n += 1) {\\n                var s = e[n];\\n                if (s.length > 1)\\n                    for (var r = 0; r < s.length; r += 1) {\\n                        var h = s[r],\\n                            a = new t(h.x, h.y, h.time),\\n                            c = h.color;\\n                        if (0 === r) this.penColor = c, this._reset(), this._addPoint(a);\\n                        else if (r !== s.length - 1) {\\n                            var d = this._addPoint(a),\\n                                l = d.curve,\\n                                u = d.widths;\\n                            l && u && i(l, u, c)\\n                        }\\n                    } else {\\n                        this._reset();\\n                        o(s[0])\\n                    }\\n            }\\n        }, o.prototype._toSVG = function() {\\n            var t = this,\\n                e = this._data,\\n                i = this._canvas,\\n                o = Math.max(window.devicePixelRatio || 1, 1),\\n                n = i.width / o,\\n                s = i.height / o,\\n                r = document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\");\\n            r.setAttributeNS(null, \\\"width\\\", i.width), r.setAttributeNS(null, \\\"height\\\", i.height), this._fromData(e, function(t, e, i) {\\n                var o = document.createElement(\\\"path\\\");\\n                if (!(isNaN(t.control1.x) || isNaN(t.control1.y) || isNaN(t.control2.x) || isNaN(t.control2.y))) {\\n                    var n = \\\"M \\\" + t.startPoint.x.toFixed(3) + \\\",\\\" + t.startPoint.y.toFixed(3) + \\\" C \\\" + t.control1.x.toFixed(3) + \\\",\\\" + t.control1.y.toFixed(3) + \\\" \\\" + t.control2.x.toFixed(3) + \\\",\\\" + t.control2.y.toFixed(3) + \\\" \\\" + t.endPoint.x.toFixed(3) + \\\",\\\" + t.endPoint.y.toFixed(3);\\n                    o.setAttribute(\\\"d\\\", n), o.setAttribute(\\\"stroke-width\\\", (2.25 * e.end).toFixed(3)), o.setAttribute(\\\"stroke\\\", i), o.setAttribute(\\\"fill\\\", \\\"none\\\"), o.setAttribute(\\\"stroke-linecap\\\", \\\"round\\\"), r.appendChild(o)\\n                }\\n            }, function(e) {\\n                var i = document.createElement(\\\"circle\\\"),\\n                    o = \\\"function\\\" == typeof t.dotSize ? t.dotSize() : t.dotSize;\\n                i.setAttribute(\\\"r\\\", o), i.setAttribute(\\\"cx\\\", e.x), i.setAttribute(\\\"cy\\\", e.y), i.setAttribute(\\\"fill\\\", e.color), r.appendChild(i)\\n            });\\n            var h = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 ' + n + \\\" \\\" + s + '\\\" width=\\\"' + n + '\\\" height=\\\"' + s + '\\\">',\\n                a = r.innerHTML;\\n            if (void 0 === a) {\\n                var c = document.createElement(\\\"dummy\\\"),\\n                    d = r.childNodes;\\n                c.innerHTML = \\\"\\\";\\n                for (var l = 0; l < d.length; l += 1) c.appendChild(d[l].cloneNode(!0));\\n                a = c.innerHTML\\n            }\\n            var u = h + a + \\\"</svg>\\\";\\n            return \\\"data:image/svg+xml;base64,\\\" + btoa(u)\\n        }, o.prototype.fromData = function(t) {\\n            var e = this;\\n            this.clear(), this._fromData(t, function(t, i) {\\n                return e._drawCurve(t, i.start, i.end)\\n            }, function(t) {\\n                return e._drawDot(t)\\n            }), this._data = t\\n        }, o.prototype.toData = function() {\\n            return this._data\\n        }, o\\n    });\\n</script>\\n\\n<body style=\\\"margin:0; padding:0;\\\">\\n\\n    <div id=\\\"parent\\\" style=\\\"height: 100vh; width: 100%;\\\">\\n    <canvas id=\\\"signature-pad\\\"></canvas>\\n    </div>\\n        \\n\\n      \\n\\n</body>\\n<script>\\n\\n\\n    const canvas = document.getElementById('signature-pad')\\n    const parent = document.getElementById(\\\"parent\\\");\\n    canvas.width = parent.offsetWidth;\\n    canvas.height = parent.offsetHeight;\\n\\n\\n    const signaturePad = new SignaturePad(canvas,{\\n        onEnd: () => {\\n            const data = signaturePad.toDataURL('image/png');\\n            const payload = JSON.stringify({\\n                type: 'SAVE_SIGNATURE',\\n                dataURI: data\\n            })\\n            window.ReactNativeWebView.postMessage(payload)\\n        },\\n        backgroundColor: 'rgb(255,255,255)',\\n    });\\n    \\n    \" + listenerType() + \".addEventListener(\\\"message\\\", (event) => {\\n        \\n        switch (event.data) {\\n            case 'SAVE_SIGNATURE':\\n                const data = signaturePad.toDataURL('image/png');\\n                const payload = JSON.stringify({\\n                    type: 'SAVE_SIGNATURE',\\n                    dataURI: data\\n                })\\n               \\n                window.ReactNativeWebView.postMessage(payload)\\n                break;\\n\\n            case 'IS_SIGNATURE_EMPTY':\\n                const payload_two = JSON.stringify({\\n                    type: 'IS_SIGNATURE_EMPTY',\\n                    isEmpty: signaturePad.isEmpty()\\n                })\\n                window.ReactNativeWebView.postMessage(payload_two)\\n                break;\\n\\n            case 'CLEAR_SIGNATURE':\\n               \\n                signaturePad.clear();\\n               \\n                break;\\n        }\\n    });\\n</script>\\n</html>\\n\";\nvar styles = StyleSheet.create({\n  root: {\n    height: 200\n  }\n});\nexport var SignatureView = function (_React$PureComponent) {\n  _inherits(SignatureView, _React$PureComponent);\n\n  var _super = _createSuper(SignatureView);\n\n  function SignatureView(_ref) {\n    var _this;\n\n    var onSave = _ref.onSave,\n        onClear = _ref.onClear;\n\n    _classCallCheck(this, SignatureView);\n\n    _this = _super.call(this);\n\n    _this.saveSignature = function () {\n      _this.webViewRef.current.postMessage('SAVE_SIGNATURE');\n    };\n\n    _this.clearSignature = function () {\n      _this.webViewRef.current.postMessage('CLEAR_SIGNATURE');\n\n      _this.state.onClear == null ? void 0 : _this.state.onClear();\n    };\n\n    _this.isEmpty = function () {\n      _this.webViewRef.current.postMessage('IS_SIGNATURE_EMPTY');\n    };\n\n    _this.onMessage = function (event) {\n      var parsedData = JSON.parse(event.nativeEvent.data);\n\n      switch (parsedData.type) {\n        case 'IS_SIGNATURE_EMPTY':\n          break;\n\n        case 'SAVE_SIGNATURE':\n          _this.state.onSave == null ? void 0 : _this.state.onSave(parsedData.dataURI);\n          break;\n      }\n    };\n\n    _this.webViewRef = React.createRef(null);\n    _this.state = {\n      onSave: onSave,\n      onClear: onClear\n    };\n    return _this;\n  }\n\n  _createClass(SignatureView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, _extends({\n        style: StyleSheet.compose(styles.root, this.props.style)\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 7\n        }\n      }), React.createElement(WebView, {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        ref: function ref(_ref2) {\n          return _this2.webViewRef.current = _ref2;\n        },\n        onMessage: this.onMessage,\n        javaScriptEnabled: true,\n        source: {\n          html: sourceHtml\n        },\n        scrollEnabled: false,\n        domStorageEnabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SignatureView;\n}(React.PureComponent);","map":{"version":3,"sources":["/Users/tsingh/Desktop/Projects/mastermind-mobile-app/node_modules/react-native-signature-capture-view/src/SignatureView.js"],"names":["React","WebView","listenerType","Platform","OS","sourceHtml","styles","StyleSheet","create","root","height","SignatureView","onSave","onClear","saveSignature","webViewRef","current","postMessage","clearSignature","state","isEmpty","onMessage","event","parsedData","JSON","parse","nativeEvent","data","type","dataURI","createRef","compose","props","style","width","ref","html","PureComponent"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAQA,SAAQC,OAAR,QAAsB,sBAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAQC,QAAQ,CAACC,EAAjB;AACE,SAAK,SAAL;AACE,aAAO,UAAP;;AACF,SAAK,KAAL;AACE,aAAO,QAAP;AAJJ;AAMD,CAPD;;AAQA,IAAMC,UAAU,0vgBA4UVH,YAAY,EA5UF,u6BAAhB;AA4WA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ;AADyB,CAAlB,CAAf;AAMA,WAAaC,aAAb;AAAA;;AAAA;;AACE,+BAA+B;AAAA;;AAAA,QAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,QAAVC,OAAU,QAAVA,OAAU;;AAAA;;AAC7B;;AAD6B,UAS/BC,aAT+B,GASf,YAAM;AACpB,YAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,WAAxB,CAAoC,gBAApC;AACD,KAX8B;;AAAA,UAa/BC,cAb+B,GAad,YAAM;AACrB,YAAKH,UAAL,CAAgBC,OAAhB,CAAwBC,WAAxB,CAAoC,iBAApC;;AACA,YAAKE,KAAL,CAAWN,OAAX,0BAAKM,KAAL,CAAWN,OAAX;AACD,KAhB8B;;AAAA,UAkB/BO,OAlB+B,GAkBrB,YAAM;AACd,YAAKL,UAAL,CAAgBC,OAAhB,CAAwBC,WAAxB,CAAoC,oBAApC;AACD,KApB8B;;AAAA,UAsB/BI,SAtB+B,GAsBnB,UAACC,KAAD,EAAW;AACrB,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,WAAN,CAAkBC,IAA7B,CAAnB;;AAEA,cAAQJ,UAAU,CAACK,IAAnB;AACE,aAAK,oBAAL;AAGE;;AACF,aAAK,gBAAL;AAEE,gBAAKT,KAAL,CAAWP,MAAX,0BAAKO,KAAL,CAAWP,MAAX,CAAoBW,UAAU,CAACM,OAA/B;AACA;AARJ;AAUD,KAnC8B;;AAE7B,UAAKd,UAAL,GAAkBf,KAAK,CAAC8B,SAAN,CAAgB,IAAhB,CAAlB;AACA,UAAKX,KAAL,GAAa;AACXP,MAAAA,MAAM,EAAEA,MADG;AAEXC,MAAAA,OAAO,EAAEA;AAFE,KAAb;AAH6B;AAO9B;;AARH;AAAA;AAAA,WAsCE,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEN,UAAU,CAACwB,OAAX,CAAmBzB,MAAM,CAACG,IAA1B,EAAgC,KAAKuB,KAAL,CAAWC,KAA3C;AADT,SAEM,KAAKD,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE,MAAR;AAAgBxB,UAAAA,MAAM,EAAE;AAAxB,SADT;AAEE,QAAA,GAAG,EAAE,aAACyB,KAAD;AAAA,iBAAU,MAAI,CAACpB,UAAL,CAAgBC,OAAhB,GAA0BmB,KAApC;AAAA,SAFP;AAGE,QAAA,SAAS,EAAE,KAAKd,SAHlB;AAIE,QAAA,iBAAiB,EAAE,IAJrB;AAKE,QAAA,MAAM,EAAE;AACNe,UAAAA,IAAI,EAAE/B;AADA,SALV;AAUE,QAAA,aAAa,EAAE,KAVjB;AAWE,QAAA,iBAAiB,EAAE,IAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAmBD;AA1DH;;AAAA;AAAA,EAAmCL,KAAK,CAACqC,aAAzC","sourcesContent":["\nimport React from 'react';\nimport {\n  StyleSheet,\n\n  View,\n\n  Platform,\n} from 'react-native';\nimport {WebView} from 'react-native-webview';\n\nconst listenerType = () => {\n  switch (Platform.OS) {\n    case 'android':\n      return 'document';\n    case 'ios':\n      return 'window';\n  }\n};\nconst sourceHtml = `\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n</head>\n<script>\n    ! function(t, e) {\n        \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(e) : t.SignaturePad = e()\n    }(this, function() {\n        \"use strict\";\n\n        function t(t, e, i) {\n            this.x = t, this.y = e, this.time = i || (new Date).getTime()\n        }\n\n        function e(t, e, i, o) {\n            this.startPoint = t, this.control1 = e, this.control2 = i, this.endPoint = o\n        }\n\n        function i(t, e, i) {\n            var o, n, s, r = null,\n                h = 0;\n            i || (i = {});\n            var a = function() {\n                h = !1 === i.leading ? 0 : Date.now(), r = null, s = t.apply(o, n), r || (o = n = null)\n            };\n            return function() {\n                var c = Date.now();\n                h || !1 !== i.leading || (h = c);\n                var d = e - (c - h);\n                return o = this, n = arguments, d <= 0 || d > e ? (r && (clearTimeout(r), r = null), h = c, s = t.apply(o, n), r || (o = n = null)) : r || !1 === i.trailing || (r = setTimeout(a, d)), s\n            }\n        }\n\n        function o(t, e) {\n            var n = this,\n                s = e || {};\n            this.velocityFilterWeight = s.velocityFilterWeight || .7, this.minWidth = s.minWidth || .5, this.maxWidth = s.maxWidth || 2.5, this.throttle = \"throttle\" in s ? s.throttle : 16, this.minDistance = \"minDistance\" in s ? s.minDistance : 5, this.throttle ? this._strokeMoveUpdate = i(o.prototype._strokeUpdate, this.throttle) : this._strokeMoveUpdate = o.prototype._strokeUpdate, this.dotSize = s.dotSize || function() {\n                return (this.minWidth + this.maxWidth) / 2\n            }, this.penColor = s.penColor || \"black\", this.backgroundColor = s.backgroundColor || \"rgba(0,0,0,0)\", this.onBegin = s.onBegin, this.onEnd = s.onEnd, this._canvas = t, this._ctx = t.getContext(\"2d\"), this.clear(), this._handleMouseDown = function(t) {\n                1 === t.which && (n._mouseButtonDown = !0, n._strokeBegin(t))\n            }, this._handleMouseMove = function(t) {\n                n._mouseButtonDown && n._strokeMoveUpdate(t)\n            }, this._handleMouseUp = function(t) {\n                1 === t.which && n._mouseButtonDown && (n._mouseButtonDown = !1, n._strokeEnd(t))\n            }, this._handleTouchStart = function(t) {\n                if (1 === t.targetTouches.length) {\n                    var e = t.changedTouches[0];\n                    n._strokeBegin(e)\n                }\n            }, this._handleTouchMove = function(t) {\n                t.preventDefault();\n                var e = t.targetTouches[0];\n                n._strokeMoveUpdate(e)\n            }, this._handleTouchEnd = function(t) {\n                t.target === n._canvas && (t.preventDefault(), n._strokeEnd(t))\n            }, this.on()\n        }\n        return t.prototype.velocityFrom = function(t) {\n            return this.time !== t.time ? this.distanceTo(t) / (this.time - t.time) : 1\n        }, t.prototype.distanceTo = function(t) {\n            return Math.sqrt(Math.pow(this.x - t.x, 2) + Math.pow(this.y - t.y, 2))\n        }, t.prototype.equals = function(t) {\n            return this.x === t.x && this.y === t.y && this.time === t.time\n        }, e.prototype.length = function() {\n            for (var t = 0, e = void 0, i = void 0, o = 0; o <= 10; o += 1) {\n                var n = o / 10,\n                    s = this._point(n, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x),\n                    r = this._point(n, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n                if (o > 0) {\n                    var h = s - e,\n                        a = r - i;\n                    t += Math.sqrt(h * h + a * a)\n                }\n                e = s, i = r\n            }\n            return t\n        }, e.prototype._point = function(t, e, i, o, n) {\n            return e * (1 - t) * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) * t + 3 * o * (1 - t) * t * t + n * t * t * t\n        }, o.prototype.clear = function() {\n            var t = this._ctx,\n                e = this._canvas;\n            t.fillStyle = this.backgroundColor, t.clearRect(0, 0, e.width, e.height), t.fillRect(0, 0, e.width, e.height), this._data = [], this._reset(), this._isEmpty = !0\n        }, o.prototype.fromDataURL = function(t) {\n            var e = this,\n                i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n                o = new Image,\n                n = i.ratio || window.devicePixelRatio || 1,\n                s = i.width || this._canvas.width / n,\n                r = i.height || this._canvas.height / n;\n            this._reset(), o.src = t, o.onload = function() {\n                e._ctx.drawImage(o, 0, 0, s, r)\n            }, this._isEmpty = !1\n        }, o.prototype.toDataURL = function(t) {\n            var e;\n            switch (t) {\n                case \"image/svg+xml\":\n                    return this._toSVG();\n                default:\n                    for (var i = arguments.length, o = Array(i > 1 ? i - 1 : 0), n = 1; n < i; n++) o[n - 1] = arguments[n];\n                    return (e = this._canvas).toDataURL.apply(e, [t].concat(o))\n            }\n        }, o.prototype.on = function() {\n            this._handleMouseEvents(), this._handleTouchEvents()\n        }, o.prototype.off = function() {\n            this._canvas.removeEventListener(\"mousedown\", this._handleMouseDown), this._canvas.removeEventListener(\"mousemove\", this._handleMouseMove), document.removeEventListener(\"mouseup\", this._handleMouseUp), this._canvas.removeEventListener(\"touchstart\", this._handleTouchStart), this._canvas.removeEventListener(\"touchmove\", this._handleTouchMove), this._canvas.removeEventListener(\"touchend\", this._handleTouchEnd)\n        }, o.prototype.isEmpty = function() {\n            return this._isEmpty\n        }, o.prototype._strokeBegin = function(t) {\n            this._data.push([]), this._reset(), this._strokeUpdate(t), \"function\" == typeof this.onBegin && this.onBegin(t)\n        }, o.prototype._strokeUpdate = function(t) {\n            var e = t.clientX,\n                i = t.clientY,\n                o = this._createPoint(e, i),\n                n = this._data[this._data.length - 1],\n                s = n && n[n.length - 1],\n                r = s && o.distanceTo(s) < this.minDistance;\n            if (!s || !r) {\n                var h = this._addPoint(o),\n                    a = h.curve,\n                    c = h.widths;\n                a && c && this._drawCurve(a, c.start, c.end), this._data[this._data.length - 1].push({\n                    x: o.x,\n                    y: o.y,\n                    time: o.time,\n                    color: this.penColor\n                })\n            }\n        }, o.prototype._strokeEnd = function(t) {\n            var e = this.points.length > 2,\n                i = this.points[0];\n            if (!e && i && this._drawDot(i), i) {\n                var o = this._data[this._data.length - 1],\n                    n = o[o.length - 1];\n                i.equals(n) || o.push({\n                    x: i.x,\n                    y: i.y,\n                    time: i.time,\n                    color: this.penColor\n                })\n            }\n            \"function\" == typeof this.onEnd && this.onEnd(t)\n        }, o.prototype._handleMouseEvents = function() {\n            this._mouseButtonDown = !1, this._canvas.addEventListener(\"mousedown\", this._handleMouseDown), this._canvas.addEventListener(\"mousemove\", this._handleMouseMove), document.addEventListener(\"mouseup\", this._handleMouseUp)\n        }, o.prototype._handleTouchEvents = function() {\n            this._canvas.style.msTouchAction = \"none\", this._canvas.style.touchAction = \"none\", this._canvas.addEventListener(\"touchstart\", this._handleTouchStart), this._canvas.addEventListener(\"touchmove\", this._handleTouchMove), this._canvas.addEventListener(\"touchend\", this._handleTouchEnd)\n        }, o.prototype._reset = function() {\n            this.points = [], this._lastVelocity = 0, this._lastWidth = (this.minWidth + this.maxWidth) / 2, this._ctx.fillStyle = this.penColor\n        }, o.prototype._createPoint = function(e, i, o) {\n            var n = this._canvas.getBoundingClientRect();\n            return new t(e - n.left, i - n.top, o || (new Date).getTime())\n        }, o.prototype._addPoint = function(t) {\n            var i = this.points,\n                o = void 0;\n            if (i.push(t), i.length > 2) {\n                3 === i.length && i.unshift(i[0]), o = this._calculateCurveControlPoints(i[0], i[1], i[2]);\n                var n = o.c2;\n                o = this._calculateCurveControlPoints(i[1], i[2], i[3]);\n                var s = o.c1,\n                    r = new e(i[1], n, s, i[2]),\n                    h = this._calculateCurveWidths(r);\n                return i.shift(), {\n                    curve: r,\n                    widths: h\n                }\n            }\n            return {}\n        }, o.prototype._calculateCurveControlPoints = function(e, i, o) {\n            var n = e.x - i.x,\n                s = e.y - i.y,\n                r = i.x - o.x,\n                h = i.y - o.y,\n                a = {\n                    x: (e.x + i.x) / 2,\n                    y: (e.y + i.y) / 2\n                },\n                c = {\n                    x: (i.x + o.x) / 2,\n                    y: (i.y + o.y) / 2\n                },\n                d = Math.sqrt(n * n + s * s),\n                l = Math.sqrt(r * r + h * h),\n                u = a.x - c.x,\n                v = a.y - c.y,\n                p = l / (d + l),\n                _ = {\n                    x: c.x + u * p,\n                    y: c.y + v * p\n                },\n                y = i.x - _.x,\n                f = i.y - _.y;\n            return {\n                c1: new t(a.x + y, a.y + f),\n                c2: new t(c.x + y, c.y + f)\n            }\n        }, o.prototype._calculateCurveWidths = function(t) {\n            var e = t.startPoint,\n                i = t.endPoint,\n                o = {\n                    start: null,\n                    end: null\n                },\n                n = this.velocityFilterWeight * i.velocityFrom(e) + (1 - this.velocityFilterWeight) * this._lastVelocity,\n                s = this._strokeWidth(n);\n            return o.start = this._lastWidth, o.end = s, this._lastVelocity = n, this._lastWidth = s, o\n        }, o.prototype._strokeWidth = function(t) {\n            return Math.max(this.maxWidth / (t + 1), this.minWidth)\n        }, o.prototype._drawPoint = function(t, e, i) {\n            var o = this._ctx;\n            o.moveTo(t, e), o.arc(t, e, i, 0, 2 * Math.PI, !1), this._isEmpty = !1\n        }, o.prototype._drawCurve = function(t, e, i) {\n            var o = this._ctx,\n                n = i - e,\n                s = Math.floor(t.length());\n            o.beginPath();\n            for (var r = 0; r < s; r += 1) {\n                var h = r / s,\n                    a = h * h,\n                    c = a * h,\n                    d = 1 - h,\n                    l = d * d,\n                    u = l * d,\n                    v = u * t.startPoint.x;\n                v += 3 * l * h * t.control1.x, v += 3 * d * a * t.control2.x, v += c * t.endPoint.x;\n                var p = u * t.startPoint.y;\n                p += 3 * l * h * t.control1.y, p += 3 * d * a * t.control2.y, p += c * t.endPoint.y;\n                var _ = e + c * n;\n                this._drawPoint(v, p, _)\n            }\n            o.closePath(), o.fill()\n        }, o.prototype._drawDot = function(t) {\n            var e = this._ctx,\n                i = \"function\" == typeof this.dotSize ? this.dotSize() : this.dotSize;\n            e.beginPath(), this._drawPoint(t.x, t.y, i), e.closePath(), e.fill()\n        }, o.prototype._fromData = function(e, i, o) {\n            for (var n = 0; n < e.length; n += 1) {\n                var s = e[n];\n                if (s.length > 1)\n                    for (var r = 0; r < s.length; r += 1) {\n                        var h = s[r],\n                            a = new t(h.x, h.y, h.time),\n                            c = h.color;\n                        if (0 === r) this.penColor = c, this._reset(), this._addPoint(a);\n                        else if (r !== s.length - 1) {\n                            var d = this._addPoint(a),\n                                l = d.curve,\n                                u = d.widths;\n                            l && u && i(l, u, c)\n                        }\n                    } else {\n                        this._reset();\n                        o(s[0])\n                    }\n            }\n        }, o.prototype._toSVG = function() {\n            var t = this,\n                e = this._data,\n                i = this._canvas,\n                o = Math.max(window.devicePixelRatio || 1, 1),\n                n = i.width / o,\n                s = i.height / o,\n                r = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            r.setAttributeNS(null, \"width\", i.width), r.setAttributeNS(null, \"height\", i.height), this._fromData(e, function(t, e, i) {\n                var o = document.createElement(\"path\");\n                if (!(isNaN(t.control1.x) || isNaN(t.control1.y) || isNaN(t.control2.x) || isNaN(t.control2.y))) {\n                    var n = \"M \" + t.startPoint.x.toFixed(3) + \",\" + t.startPoint.y.toFixed(3) + \" C \" + t.control1.x.toFixed(3) + \",\" + t.control1.y.toFixed(3) + \" \" + t.control2.x.toFixed(3) + \",\" + t.control2.y.toFixed(3) + \" \" + t.endPoint.x.toFixed(3) + \",\" + t.endPoint.y.toFixed(3);\n                    o.setAttribute(\"d\", n), o.setAttribute(\"stroke-width\", (2.25 * e.end).toFixed(3)), o.setAttribute(\"stroke\", i), o.setAttribute(\"fill\", \"none\"), o.setAttribute(\"stroke-linecap\", \"round\"), r.appendChild(o)\n                }\n            }, function(e) {\n                var i = document.createElement(\"circle\"),\n                    o = \"function\" == typeof t.dotSize ? t.dotSize() : t.dotSize;\n                i.setAttribute(\"r\", o), i.setAttribute(\"cx\", e.x), i.setAttribute(\"cy\", e.y), i.setAttribute(\"fill\", e.color), r.appendChild(i)\n            });\n            var h = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 ' + n + \" \" + s + '\" width=\"' + n + '\" height=\"' + s + '\">',\n                a = r.innerHTML;\n            if (void 0 === a) {\n                var c = document.createElement(\"dummy\"),\n                    d = r.childNodes;\n                c.innerHTML = \"\";\n                for (var l = 0; l < d.length; l += 1) c.appendChild(d[l].cloneNode(!0));\n                a = c.innerHTML\n            }\n            var u = h + a + \"</svg>\";\n            return \"data:image/svg+xml;base64,\" + btoa(u)\n        }, o.prototype.fromData = function(t) {\n            var e = this;\n            this.clear(), this._fromData(t, function(t, i) {\n                return e._drawCurve(t, i.start, i.end)\n            }, function(t) {\n                return e._drawDot(t)\n            }), this._data = t\n        }, o.prototype.toData = function() {\n            return this._data\n        }, o\n    });\n</script>\n\n<body style=\"margin:0; padding:0;\">\n\n    <div id=\"parent\" style=\"height: 100vh; width: 100%;\">\n    <canvas id=\"signature-pad\"></canvas>\n    </div>\n        \n\n      \n\n</body>\n<script>\n\n\n    const canvas = document.getElementById('signature-pad')\n    const parent = document.getElementById(\"parent\");\n    canvas.width = parent.offsetWidth;\n    canvas.height = parent.offsetHeight;\n\n\n    const signaturePad = new SignaturePad(canvas,{\n        onEnd: () => {\n            const data = signaturePad.toDataURL('image/png');\n            const payload = JSON.stringify({\n                type: 'SAVE_SIGNATURE',\n                dataURI: data\n            })\n            window.ReactNativeWebView.postMessage(payload)\n        },\n        backgroundColor: 'rgb(255,255,255)',\n    });\n    \n    ${listenerType()}.addEventListener(\"message\", (event) => {\n        \n        switch (event.data) {\n            case 'SAVE_SIGNATURE':\n                const data = signaturePad.toDataURL('image/png');\n                const payload = JSON.stringify({\n                    type: 'SAVE_SIGNATURE',\n                    dataURI: data\n                })\n               \n                window.ReactNativeWebView.postMessage(payload)\n                break;\n\n            case 'IS_SIGNATURE_EMPTY':\n                const payload_two = JSON.stringify({\n                    type: 'IS_SIGNATURE_EMPTY',\n                    isEmpty: signaturePad.isEmpty()\n                })\n                window.ReactNativeWebView.postMessage(payload_two)\n                break;\n\n            case 'CLEAR_SIGNATURE':\n               \n                signaturePad.clear();\n               \n                break;\n        }\n    });\n</script>\n</html>\n`;\n\nconst styles = StyleSheet.create({\n  root: {\n    height: 200,\n  },\n});\n\nexport class SignatureView extends React.PureComponent {\n  constructor({onSave, onClear}) {\n    super();\n    this.webViewRef = React.createRef(null);\n    this.state = {\n      onSave: onSave,\n      onClear: onClear,\n    };\n  }\n\n  saveSignature = () => {\n    this.webViewRef.current.postMessage('SAVE_SIGNATURE');\n  };\n\n  clearSignature = () => {\n    this.webViewRef.current.postMessage('CLEAR_SIGNATURE');\n    this.state.onClear?.();\n  };\n\n  isEmpty = () => {\n    this.webViewRef.current.postMessage('IS_SIGNATURE_EMPTY');\n  };\n\n  onMessage = (event) => {\n    const parsedData = JSON.parse(event.nativeEvent.data);\n\n    switch (parsedData.type) {\n      case 'IS_SIGNATURE_EMPTY':\n        // console.log('IS_SIGNATURE_EMPTY', parsedData.isEmpty);\n\n        break;\n      case 'SAVE_SIGNATURE':\n        // console.log('SAVE_SIGNATURE', parsedData.dataURI);\n        this.state.onSave?.(parsedData.dataURI);\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <View\n        style={StyleSheet.compose(styles.root, this.props.style)}\n        {...this.props}>\n        <WebView\n          style={{width: '100%', height: '100%'}}\n          ref={(ref) => (this.webViewRef.current = ref)}\n          onMessage={this.onMessage}\n          javaScriptEnabled={true}\n          source={{\n            html: sourceHtml,\n            // uri:\n            //   'https://stackoverflow.com/questions/37455701/react-native-nested-scrollview-cant-scroll-on-android-device',\n          }}\n          scrollEnabled={false}\n          domStorageEnabled={true}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}