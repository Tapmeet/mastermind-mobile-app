{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tsingh/Desktop/Projects/mastermind-mobile-app/src/components/screens/ForgetPassword.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Form, Item, Input, Label, Button, Text, Body, H3, Icon } from \"native-base\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport { API_URL } from \"./../Utility/AppConst\";\n\nvar ForgetPassword = function ForgetPassword(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      checkEmail = _React$useState4[0],\n      setCheckEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      errorMessage = _React$useState6[0],\n      setErrorMessage = _React$useState6[1];\n\n  ValidateEmail = function ValidateEmail(mail) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(mail);\n  };\n\n  setemail = function setemail(event) {\n    setEmail(event);\n\n    if (event == \"\") {\n      setCheckEmail(true);\n    } else {\n      setCheckEmail(false);\n    }\n  };\n\n  submitForm = function submitForm() {\n    setErrorMessage(\"\");\n\n    if (email == \"\") {\n      setCheckEmail(!checkEmail);\n      return false;\n    }\n\n    var checkemail = ValidateEmail(email);\n\n    if (checkemail == false) {\n      setCheckEmail(!checkEmail);\n      return false;\n    }\n\n    console.log(\"here\");\n    fetch(API_URL + \"/odata/ForgotPassword\", {\n      method: \"post\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email: email\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n\n      if (response[\"odata.error\"]) {\n        setErrorMessage(response[\"odata.error\"].message.value);\n      } else {\n        props.navigation.navigate(\"VerificationCode\", {\n          code: response[\"code\"],\n          verificationKey: response[\"verificationKey\"],\n          email: email\n        });\n      }\n    }).catch(function (response) {\n      setErrorMessage(\"An error has occurred. Please check all the fields\");\n    });\n  };\n\n  var navigation = props.navigation;\n  return React.createElement(Container, {\n    style: loginStyle.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(Content, {\n    style: loginStyle.spacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: {\n      width: \"100%\",\n      height: 260\n    },\n    source: require(\"./../../../assets/bg.png\"),\n    resizeMode: 'stretch',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: loginStyle.backWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Login\");\n    },\n    style: loginStyle.backButtonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: loginStyle.backButton,\n    source: require(\"../../../assets/BackButton.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: {\n      alignSelf: \"center\",\n      paddingTop: 80\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: loginStyle.logo,\n    source: require(\"../../../assets/Logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }))), React.createElement(Body, {\n    style: loginStyle.bodyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(H3, {\n    style: globalStyle.h3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Forgot Password?\"), React.createElement(Text, {\n    style: verificationStyle.subHeadingWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Enter your registered email below to receive password reset instruction\")), React.createElement(Form, {\n    style: verificationStyle.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(Body, {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), React.createElement(Body, {\n    style: verificationStyle.spaceBetween,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(Input, {\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setemail(text);\n    },\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"#ccc\",\n    style: checkEmail ? globalStyle.formControlError : globalStyle.formControl,\n    placeholder: \"Enter Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), checkEmail ? React.createElement(Text, {\n    style: globalStyle.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Enter Valid Email \") : null, errorMessage != \"\" ? React.createElement(Text, {\n    style: globalStyle.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, errorMessage) : null, React.createElement(Content, {\n    style: loginStyle.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    onPress: submitForm,\n    style: loginStyle.button,\n    full: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: loginStyle.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Send\"))))));\n};\n\nexport default ForgetPassword;","map":{"version":3,"sources":["/Users/tsingh/Desktop/Projects/mastermind-mobile-app/src/components/screens/ForgetPassword.js"],"names":["React","Container","Content","Form","Item","Input","Label","Button","Text","Body","H3","Icon","verificationStyle","loginStyle","globalStyle","API_URL","ForgetPassword","props","useState","email","setEmail","checkEmail","setCheckEmail","errorMessage","setErrorMessage","ValidateEmail","mail","test","setemail","event","submitForm","checkemail","console","log","fetch","method","headers","Accept","body","JSON","stringify","Email","then","response","json","message","value","navigation","navigate","code","verificationKey","catch","container","spacing","width","height","require","backWrapper","backButtonStyle","backButton","alignSelf","paddingTop","logo","bodyContainer","h3","subHeadingWrapper","form","paddingBottom","spaceBetween","text","formControlError","formControl","error","errorText","formContainer","button","buttonText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Image, StyleSheet, ImageBackground } from \"react-native\";\nimport {\n  Container,\n  Content,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Text,\n  Body,\n  H3,\n  Icon,\n} from \"native-base\";\nimport verificationStyle from \"../../style/verification/verifcationStyle\";\nimport loginStyle from \"../../style/login/loginStyle\";\nimport globalStyle from \"../../style/globalStyle\";\nimport { API_URL } from \"./../Utility/AppConst\"\nconst ForgetPassword = (props) => {\n  const [email, setEmail] = React.useState(\"\");\n  const [checkEmail, setCheckEmail] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  ValidateEmail = (mail) => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(mail);\n  };\n\n  setemail = (event) => {\n    setEmail(event);\n    if (event == \"\") {\n      setCheckEmail(true);\n    } else {\n      setCheckEmail(false);\n    }\n  };\n  //Form Submission\n  submitForm = () => {\n    setErrorMessage(\"\");\n    if (email == \"\") {\n      setCheckEmail(!checkEmail);\n      return false;\n    }\n    let checkemail = ValidateEmail(email);\n    if (checkemail == false) {\n      setCheckEmail(!checkEmail);\n      return false;\n    }\n    console.log(\"here\");\n    fetch(`${API_URL}/odata/ForgotPassword`, {\n      method: \"post\",\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        Email: email,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        if (response[\"odata.error\"]) {\n          // console.log(response[\"odata.error\"].message.value)\n          setErrorMessage(response[\"odata.error\"].message.value);\n        } else {\n          //this.props.navigation.navigate('AccountSuccess')\n          props.navigation.navigate(\"VerificationCode\", {\n            code: response[\"code\"],\n            verificationKey: response[\"verificationKey\"],\n            email: email\n          });\n        }\n      })\n      .catch((response) => {\n        setErrorMessage(\"An error has occurred. Please check all the fields\");\n      });\n  };\n  const { navigation } = props;\n  return (\n    <Container style={loginStyle.container}>\n      <Content style={loginStyle.spacing} >\n        <ImageBackground\n          style={{\n            width: \"100%\",\n            height: 260,\n          }}\n          source={require('./../../../assets/bg.png')}\n          resizeMode={'stretch'}\n        >\n          <View style={loginStyle.backWrapper}>\n            <Text\n              onPress={() => props.navigation.navigate(\"Login\")}\n              style={loginStyle.backButtonStyle}\n            >\n              <Image\n                style={loginStyle.backButton}\n                source={require(\"../../../assets/BackButton.png\")}\n              />\n            </Text>\n          </View>\n          <View style={{\n            alignSelf: \"center\",\n            paddingTop: 80\n          }}>\n            <Image\n              style={loginStyle.logo}\n              source={require(\"../../../assets/Logo.png\")}\n            />\n          </View>\n        </ImageBackground>\n        <Body style={loginStyle.bodyContainer}>\n          <H3 style={globalStyle.h3}>Forgot Password?</H3>\n          <Text style={verificationStyle.subHeadingWrapper}>\n            Enter your registered email below to receive password reset\n            instruction\n          </Text>\n        </Body>\n        <Form style={verificationStyle.form}>\n          <Body style={{ paddingBottom: 40 }}>\n            {/* <Image\n              style={verificationStyle.envelop}\n              source={require(\"../../../assets/Envelop2.png\")}\n            /> */}\n          </Body>\n          <Body style={verificationStyle.spaceBetween}>\n            <Input\n              value={email}\n              onChangeText={(text) => setemail(text)}\n              autoCapitalize='none'\n              placeholderTextColor='#ccc'\n              style={\n                checkEmail\n                  ? globalStyle.formControlError\n                  : globalStyle.formControl\n              }\n              placeholder=\"Enter Email\"\n            />\n          </Body>\n          {checkEmail ? (\n            <Text style={globalStyle.error}>Enter Valid Email </Text>\n          ) : null}\n          {errorMessage != \"\" ? (\n            <Text style={globalStyle.errorText}>{errorMessage}</Text>\n          ) : null}\n\n          <Content style={loginStyle.formContainer}>\n            <Button\n              onPress={submitForm}\n              //onPress={() => props.navigation.navigate(\"VerificationCode\")}\n              style={loginStyle.button}\n              full\n            >\n              <Text style={loginStyle.buttonText} >Send</Text>\n            </Button>\n          </Content>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\nexport default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}